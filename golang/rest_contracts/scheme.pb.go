// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.2
// source: contracts/rest_contracts/scheme.proto

package rest_contracts

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BodyParamType int32

const (
	BodyParamType_SIMPLE_PROPERTY BodyParamType = 0
	BodyParamType_LIST            BodyParamType = 1
	BodyParamType_OBJECT          BodyParamType = 2
)

// Enum value maps for BodyParamType.
var (
	BodyParamType_name = map[int32]string{
		0: "SIMPLE_PROPERTY",
		1: "LIST",
		2: "OBJECT",
	}
	BodyParamType_value = map[string]int32{
		"SIMPLE_PROPERTY": 0,
		"LIST":            1,
		"OBJECT":          2,
	}
)

func (x BodyParamType) Enum() *BodyParamType {
	p := new(BodyParamType)
	*p = x
	return p
}

func (x BodyParamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BodyParamType) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_rest_contracts_scheme_proto_enumTypes[0].Descriptor()
}

func (BodyParamType) Type() protoreflect.EnumType {
	return &file_contracts_rest_contracts_scheme_proto_enumTypes[0]
}

func (x BodyParamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BodyParamType.Descriptor instead.
func (BodyParamType) EnumDescriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{0}
}

type GeneratorType int32

const (
	GeneratorType_WORD_GENERATOR GeneratorType = 0
	GeneratorType_IP_GENERATOR   GeneratorType = 2
	GeneratorType_MAC_GENERATOR  GeneratorType = 3
)

// Enum value maps for GeneratorType.
var (
	GeneratorType_name = map[int32]string{
		0: "WORD_GENERATOR",
		2: "IP_GENERATOR",
		3: "MAC_GENERATOR",
	}
	GeneratorType_value = map[string]int32{
		"WORD_GENERATOR": 0,
		"IP_GENERATOR":   2,
		"MAC_GENERATOR":  3,
	}
)

func (x GeneratorType) Enum() *GeneratorType {
	p := new(GeneratorType)
	*p = x
	return p
}

func (x GeneratorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GeneratorType) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_rest_contracts_scheme_proto_enumTypes[1].Descriptor()
}

func (GeneratorType) Type() protoreflect.EnumType {
	return &file_contracts_rest_contracts_scheme_proto_enumTypes[1]
}

func (x GeneratorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GeneratorType.Descriptor instead.
func (GeneratorType) EnumDescriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{1}
}

type Language int32

const (
	Language_RU Language = 0
	Language_EN Language = 1
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "RU",
		1: "EN",
	}
	Language_value = map[string]int32{
		"RU": 0,
		"EN": 1,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_rest_contracts_scheme_proto_enumTypes[2].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_contracts_rest_contracts_scheme_proto_enumTypes[2]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{2}
}

type RestSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PathVariables map[string]string `protobuf:"bytes,2,rep,name=pathVariables,proto3" json:"pathVariables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Headers       map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Request       []*RequestParam   `protobuf:"bytes,4,rep,name=request,proto3" json:"request,omitempty"`
	Body          []*BodyParam      `protobuf:"bytes,5,rep,name=body,proto3" json:"body,omitempty"`
}

func (x *RestSchema) Reset() {
	*x = RestSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestSchema) ProtoMessage() {}

func (x *RestSchema) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestSchema.ProtoReflect.Descriptor instead.
func (*RestSchema) Descriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{0}
}

func (x *RestSchema) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RestSchema) GetPathVariables() map[string]string {
	if x != nil {
		return x.PathVariables
	}
	return nil
}

func (x *RestSchema) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *RestSchema) GetRequest() []*RequestParam {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *RestSchema) GetBody() []*BodyParam {
	if x != nil {
		return x.Body
	}
	return nil
}

type BodyParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          BodyParamType    `protobuf:"varint,2,opt,name=type,proto3,enum=contracts.rest_contracts.BodyParamType" json:"type,omitempty"`
	IsGenerated   bool             `protobuf:"varint,3,opt,name=isGenerated,proto3" json:"isGenerated,omitempty"`
	GeneratorType GeneratorType    `protobuf:"varint,4,opt,name=generatorType,proto3,enum=contracts.rest_contracts.GeneratorType" json:"generatorType,omitempty"`
	Config        *GeneratorConfig `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	// Types that are assignable to Value:
	//	*BodyParam_SimpleProperty
	//	*BodyParam_ListProperty
	//	*BodyParam_Properties
	Value isBodyParam_Value `protobuf_oneof:"value"`
}

func (x *BodyParam) Reset() {
	*x = BodyParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BodyParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyParam) ProtoMessage() {}

func (x *BodyParam) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyParam.ProtoReflect.Descriptor instead.
func (*BodyParam) Descriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{1}
}

func (x *BodyParam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BodyParam) GetType() BodyParamType {
	if x != nil {
		return x.Type
	}
	return BodyParamType_SIMPLE_PROPERTY
}

func (x *BodyParam) GetIsGenerated() bool {
	if x != nil {
		return x.IsGenerated
	}
	return false
}

func (x *BodyParam) GetGeneratorType() GeneratorType {
	if x != nil {
		return x.GeneratorType
	}
	return GeneratorType_WORD_GENERATOR
}

func (x *BodyParam) GetConfig() *GeneratorConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (m *BodyParam) GetValue() isBodyParam_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *BodyParam) GetSimpleProperty() *SimpleValue {
	if x, ok := x.GetValue().(*BodyParam_SimpleProperty); ok {
		return x.SimpleProperty
	}
	return nil
}

func (x *BodyParam) GetListProperty() *ListProperty {
	if x, ok := x.GetValue().(*BodyParam_ListProperty); ok {
		return x.ListProperty
	}
	return nil
}

func (x *BodyParam) GetProperties() *ObjectProperty {
	if x, ok := x.GetValue().(*BodyParam_Properties); ok {
		return x.Properties
	}
	return nil
}

type isBodyParam_Value interface {
	isBodyParam_Value()
}

type BodyParam_SimpleProperty struct {
	SimpleProperty *SimpleValue `protobuf:"bytes,6,opt,name=simpleProperty,proto3,oneof"`
}

type BodyParam_ListProperty struct {
	ListProperty *ListProperty `protobuf:"bytes,7,opt,name=listProperty,proto3,oneof"`
}

type BodyParam_Properties struct {
	Properties *ObjectProperty `protobuf:"bytes,8,opt,name=properties,proto3,oneof"`
}

func (*BodyParam_SimpleProperty) isBodyParam_Value() {}

func (*BodyParam_ListProperty) isBodyParam_Value() {}

func (*BodyParam_Properties) isBodyParam_Value() {}

type SimpleValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*SimpleValue_StringValue
	//	*SimpleValue_Int32Value
	//	*SimpleValue_Int64Value
	Value isSimpleValue_Value `protobuf_oneof:"value"`
}

func (x *SimpleValue) Reset() {
	*x = SimpleValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleValue) ProtoMessage() {}

func (x *SimpleValue) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleValue.ProtoReflect.Descriptor instead.
func (*SimpleValue) Descriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{2}
}

func (m *SimpleValue) GetValue() isSimpleValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *SimpleValue) GetStringValue() string {
	if x, ok := x.GetValue().(*SimpleValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *SimpleValue) GetInt32Value() int32 {
	if x, ok := x.GetValue().(*SimpleValue_Int32Value); ok {
		return x.Int32Value
	}
	return 0
}

func (x *SimpleValue) GetInt64Value() int64 {
	if x, ok := x.GetValue().(*SimpleValue_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

type isSimpleValue_Value interface {
	isSimpleValue_Value()
}

type SimpleValue_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=stringValue,proto3,oneof"`
}

type SimpleValue_Int32Value struct {
	Int32Value int32 `protobuf:"varint,2,opt,name=int32Value,proto3,oneof"`
}

type SimpleValue_Int64Value struct {
	Int64Value int64 `protobuf:"varint,3,opt,name=int64Value,proto3,oneof"`
}

func (*SimpleValue_StringValue) isSimpleValue_Value() {}

func (*SimpleValue_Int32Value) isSimpleValue_Value() {}

func (*SimpleValue_Int64Value) isSimpleValue_Value() {}

type ListProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SimpleValue `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *ListProperty) Reset() {
	*x = ListProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProperty) ProtoMessage() {}

func (x *ListProperty) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProperty.ProtoReflect.Descriptor instead.
func (*ListProperty) Descriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{3}
}

func (x *ListProperty) GetValue() []*SimpleValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type ObjectProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties map[string]*BodyParam `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ObjectProperty) Reset() {
	*x = ObjectProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectProperty) ProtoMessage() {}

func (x *ObjectProperty) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectProperty.ProtoReflect.Descriptor instead.
func (*ObjectProperty) Descriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{4}
}

func (x *ObjectProperty) GetProperties() map[string]*BodyParam {
	if x != nil {
		return x.Properties
	}
	return nil
}

type RequestParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsGeneratorNeed bool             `protobuf:"varint,2,opt,name=isGeneratorNeed,proto3" json:"isGeneratorNeed,omitempty"`
	Value           string           `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Generator       GeneratorType    `protobuf:"varint,5,opt,name=generator,proto3,enum=contracts.rest_contracts.GeneratorType" json:"generator,omitempty"`
	GeneratorConfig *GeneratorConfig `protobuf:"bytes,6,opt,name=generatorConfig,proto3" json:"generatorConfig,omitempty"`
}

func (x *RequestParam) Reset() {
	*x = RequestParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestParam) ProtoMessage() {}

func (x *RequestParam) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestParam.ProtoReflect.Descriptor instead.
func (*RequestParam) Descriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{5}
}

func (x *RequestParam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestParam) GetIsGeneratorNeed() bool {
	if x != nil {
		return x.IsGeneratorNeed
	}
	return false
}

func (x *RequestParam) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RequestParam) GetGenerator() GeneratorType {
	if x != nil {
		return x.Generator
	}
	return GeneratorType_WORD_GENERATOR
}

func (x *RequestParam) GetGeneratorConfig() *GeneratorConfig {
	if x != nil {
		return x.GeneratorConfig
	}
	return nil
}

type GeneratorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Res:
	//	*GeneratorConfig_IpGeneratorConfig
	//	*GeneratorConfig_WordGeneratorConfig
	//	*GeneratorConfig_PasswordGeneratorConfig
	//	*GeneratorConfig_RegexpConfig
	Res isGeneratorConfig_Res `protobuf_oneof:"res"`
}

func (x *GeneratorConfig) Reset() {
	*x = GeneratorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratorConfig) ProtoMessage() {}

func (x *GeneratorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratorConfig.ProtoReflect.Descriptor instead.
func (*GeneratorConfig) Descriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{6}
}

func (m *GeneratorConfig) GetRes() isGeneratorConfig_Res {
	if m != nil {
		return m.Res
	}
	return nil
}

func (x *GeneratorConfig) GetIpGeneratorConfig() *IpGeneratorConfig {
	if x, ok := x.GetRes().(*GeneratorConfig_IpGeneratorConfig); ok {
		return x.IpGeneratorConfig
	}
	return nil
}

func (x *GeneratorConfig) GetWordGeneratorConfig() *WordGeneratorConfig {
	if x, ok := x.GetRes().(*GeneratorConfig_WordGeneratorConfig); ok {
		return x.WordGeneratorConfig
	}
	return nil
}

func (x *GeneratorConfig) GetPasswordGeneratorConfig() *PasswordGeneratorConfig {
	if x, ok := x.GetRes().(*GeneratorConfig_PasswordGeneratorConfig); ok {
		return x.PasswordGeneratorConfig
	}
	return nil
}

func (x *GeneratorConfig) GetRegexpConfig() *RegexpConfig {
	if x, ok := x.GetRes().(*GeneratorConfig_RegexpConfig); ok {
		return x.RegexpConfig
	}
	return nil
}

type isGeneratorConfig_Res interface {
	isGeneratorConfig_Res()
}

type GeneratorConfig_IpGeneratorConfig struct {
	IpGeneratorConfig *IpGeneratorConfig `protobuf:"bytes,1,opt,name=ipGeneratorConfig,proto3,oneof"`
}

type GeneratorConfig_WordGeneratorConfig struct {
	WordGeneratorConfig *WordGeneratorConfig `protobuf:"bytes,2,opt,name=wordGeneratorConfig,proto3,oneof"`
}

type GeneratorConfig_PasswordGeneratorConfig struct {
	PasswordGeneratorConfig *PasswordGeneratorConfig `protobuf:"bytes,3,opt,name=passwordGeneratorConfig,proto3,oneof"`
}

type GeneratorConfig_RegexpConfig struct {
	RegexpConfig *RegexpConfig `protobuf:"bytes,4,opt,name=regexpConfig,proto3,oneof"`
}

func (*GeneratorConfig_IpGeneratorConfig) isGeneratorConfig_Res() {}

func (*GeneratorConfig_WordGeneratorConfig) isGeneratorConfig_Res() {}

func (*GeneratorConfig_PasswordGeneratorConfig) isGeneratorConfig_Res() {}

func (*GeneratorConfig_RegexpConfig) isGeneratorConfig_Res() {}

type Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min int32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max int32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *Section) Reset() {
	*x = Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Section) ProtoMessage() {}

func (x *Section) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Section.ProtoReflect.Descriptor instead.
func (*Section) Descriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{7}
}

func (x *Section) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Section) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

type IpGeneratorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstSection  *Section `protobuf:"bytes,1,opt,name=firstSection,proto3" json:"firstSection,omitempty"`
	SecondSection *Section `protobuf:"bytes,2,opt,name=secondSection,proto3" json:"secondSection,omitempty"`
	ThirdSection  *Section `protobuf:"bytes,3,opt,name=thirdSection,proto3" json:"thirdSection,omitempty"`
	FourthSection *Section `protobuf:"bytes,4,opt,name=fourthSection,proto3" json:"fourthSection,omitempty"`
}

func (x *IpGeneratorConfig) Reset() {
	*x = IpGeneratorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpGeneratorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpGeneratorConfig) ProtoMessage() {}

func (x *IpGeneratorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpGeneratorConfig.ProtoReflect.Descriptor instead.
func (*IpGeneratorConfig) Descriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{8}
}

func (x *IpGeneratorConfig) GetFirstSection() *Section {
	if x != nil {
		return x.FirstSection
	}
	return nil
}

func (x *IpGeneratorConfig) GetSecondSection() *Section {
	if x != nil {
		return x.SecondSection
	}
	return nil
}

func (x *IpGeneratorConfig) GetThirdSection() *Section {
	if x != nil {
		return x.ThirdSection
	}
	return nil
}

func (x *IpGeneratorConfig) GetFourthSection() *Section {
	if x != nil {
		return x.FourthSection
	}
	return nil
}

type WordGeneratorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinLetters int32    `protobuf:"varint,1,opt,name=minLetters,proto3" json:"minLetters,omitempty"`
	MaxLetters int32    `protobuf:"varint,2,opt,name=maxLetters,proto3" json:"maxLetters,omitempty"`
	Language   Language `protobuf:"varint,3,opt,name=language,proto3,enum=contracts.rest_contracts.Language" json:"language,omitempty"`
}

func (x *WordGeneratorConfig) Reset() {
	*x = WordGeneratorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordGeneratorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordGeneratorConfig) ProtoMessage() {}

func (x *WordGeneratorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordGeneratorConfig.ProtoReflect.Descriptor instead.
func (*WordGeneratorConfig) Descriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{9}
}

func (x *WordGeneratorConfig) GetMinLetters() int32 {
	if x != nil {
		return x.MinLetters
	}
	return 0
}

func (x *WordGeneratorConfig) GetMaxLetters() int32 {
	if x != nil {
		return x.MaxLetters
	}
	return 0
}

func (x *WordGeneratorConfig) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_RU
}

type PasswordGeneratorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alphabet    string `protobuf:"bytes,1,opt,name=alphabet,proto3" json:"alphabet,omitempty"`
	AmountChars int32  `protobuf:"varint,2,opt,name=amountChars,proto3" json:"amountChars,omitempty"`
}

func (x *PasswordGeneratorConfig) Reset() {
	*x = PasswordGeneratorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordGeneratorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordGeneratorConfig) ProtoMessage() {}

func (x *PasswordGeneratorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordGeneratorConfig.ProtoReflect.Descriptor instead.
func (*PasswordGeneratorConfig) Descriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{10}
}

func (x *PasswordGeneratorConfig) GetAlphabet() string {
	if x != nil {
		return x.Alphabet
	}
	return ""
}

func (x *PasswordGeneratorConfig) GetAmountChars() int32 {
	if x != nil {
		return x.AmountChars
	}
	return 0
}

type RegexpConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pattern string `protobuf:"bytes,1,opt,name=pattern,proto3" json:"pattern,omitempty"`
}

func (x *RegexpConfig) Reset() {
	*x = RegexpConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegexpConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegexpConfig) ProtoMessage() {}

func (x *RegexpConfig) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_rest_contracts_scheme_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegexpConfig.ProtoReflect.Descriptor instead.
func (*RegexpConfig) Descriptor() ([]byte, []int) {
	return file_contracts_rest_contracts_scheme_proto_rawDescGZIP(), []int{11}
}

func (x *RegexpConfig) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

var File_contracts_rest_contracts_scheme_proto protoreflect.FileDescriptor

var file_contracts_rest_contracts_scheme_proto_rawDesc = []byte{
	0x0a, 0x25, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x22, 0xc1, 0x03, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x5d, 0x0a, 0x0d, 0x70, 0x61, 0x74, 0x68, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x61,
	0x74, 0x68, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0d, 0x70, 0x61, 0x74, 0x68, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x4b, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x40, 0x0a, 0x12, 0x50, 0x61, 0x74, 0x68, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x84, 0x04, 0x0a, 0x09, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4f, 0x0a, 0x0e, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0c, 0x6c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7e, 0x0a, 0x0b,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0b, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x20, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x20, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x0e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x62, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfe, 0x01, 0x0a, 0x0c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x69, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x65,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x45, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x53, 0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x95, 0x03, 0x0a, 0x0f,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x5b, 0x0a, 0x11, 0x69, 0x70, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x49, 0x70, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x11, 0x69, 0x70, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x61, 0x0a, 0x13,
	0x77, 0x6f, 0x72, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x13, 0x77, 0x6f, 0x72, 0x64,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x6d, 0x0a, 0x17, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x17, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4c,
	0x0a, 0x0c, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x52, 0x65, 0x67, 0x65, 0x78, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0c,
	0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x05, 0x0a, 0x03,
	0x72, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d,
	0x61, 0x78, 0x22, 0xb3, 0x02, 0x0a, 0x11, 0x49, 0x70, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x45, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x47, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0c, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x74, 0x68, 0x69, 0x72, 0x64, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x47, 0x0a, 0x0d, 0x66, 0x6f, 0x75, 0x72, 0x74, 0x68, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x66, 0x6f, 0x75, 0x72, 0x74,
	0x68, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x13, 0x57, 0x6f, 0x72,
	0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x3e, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x22, 0x57, 0x0a, 0x17, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x62, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x62, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x73, 0x22, 0x28, 0x0a, 0x0c, 0x52, 0x65, 0x67,
	0x65, 0x78, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x2a, 0x3a, 0x0a, 0x0d, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x5f, 0x50,
	0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x53,
	0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x02, 0x2a,
	0x48, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x0e, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54,
	0x4f, 0x52, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x50, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52,
	0x41, 0x54, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45,
	0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x03, 0x2a, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x52, 0x55, 0x10, 0x00, 0x12, 0x06, 0x0a,
	0x02, 0x45, 0x4e, 0x10, 0x01, 0x42, 0x60, 0x0a, 0x19, 0x6f, 0x72, 0x67, 0x2e, 0x62, 0x6f, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62,
	0x6f, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x62, 0x6f, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contracts_rest_contracts_scheme_proto_rawDescOnce sync.Once
	file_contracts_rest_contracts_scheme_proto_rawDescData = file_contracts_rest_contracts_scheme_proto_rawDesc
)

func file_contracts_rest_contracts_scheme_proto_rawDescGZIP() []byte {
	file_contracts_rest_contracts_scheme_proto_rawDescOnce.Do(func() {
		file_contracts_rest_contracts_scheme_proto_rawDescData = protoimpl.X.CompressGZIP(file_contracts_rest_contracts_scheme_proto_rawDescData)
	})
	return file_contracts_rest_contracts_scheme_proto_rawDescData
}

var file_contracts_rest_contracts_scheme_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_contracts_rest_contracts_scheme_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_contracts_rest_contracts_scheme_proto_goTypes = []interface{}{
	(BodyParamType)(0),              // 0: contracts.rest_contracts.BodyParamType
	(GeneratorType)(0),              // 1: contracts.rest_contracts.GeneratorType
	(Language)(0),                   // 2: contracts.rest_contracts.Language
	(*RestSchema)(nil),              // 3: contracts.rest_contracts.RestSchema
	(*BodyParam)(nil),               // 4: contracts.rest_contracts.BodyParam
	(*SimpleValue)(nil),             // 5: contracts.rest_contracts.SimpleValue
	(*ListProperty)(nil),            // 6: contracts.rest_contracts.ListProperty
	(*ObjectProperty)(nil),          // 7: contracts.rest_contracts.ObjectProperty
	(*RequestParam)(nil),            // 8: contracts.rest_contracts.RequestParam
	(*GeneratorConfig)(nil),         // 9: contracts.rest_contracts.GeneratorConfig
	(*Section)(nil),                 // 10: contracts.rest_contracts.Section
	(*IpGeneratorConfig)(nil),       // 11: contracts.rest_contracts.IpGeneratorConfig
	(*WordGeneratorConfig)(nil),     // 12: contracts.rest_contracts.WordGeneratorConfig
	(*PasswordGeneratorConfig)(nil), // 13: contracts.rest_contracts.PasswordGeneratorConfig
	(*RegexpConfig)(nil),            // 14: contracts.rest_contracts.RegexpConfig
	nil,                             // 15: contracts.rest_contracts.RestSchema.PathVariablesEntry
	nil,                             // 16: contracts.rest_contracts.RestSchema.HeadersEntry
	nil,                             // 17: contracts.rest_contracts.ObjectProperty.PropertiesEntry
}
var file_contracts_rest_contracts_scheme_proto_depIdxs = []int32{
	15, // 0: contracts.rest_contracts.RestSchema.pathVariables:type_name -> contracts.rest_contracts.RestSchema.PathVariablesEntry
	16, // 1: contracts.rest_contracts.RestSchema.headers:type_name -> contracts.rest_contracts.RestSchema.HeadersEntry
	8,  // 2: contracts.rest_contracts.RestSchema.request:type_name -> contracts.rest_contracts.RequestParam
	4,  // 3: contracts.rest_contracts.RestSchema.body:type_name -> contracts.rest_contracts.BodyParam
	0,  // 4: contracts.rest_contracts.BodyParam.type:type_name -> contracts.rest_contracts.BodyParamType
	1,  // 5: contracts.rest_contracts.BodyParam.generatorType:type_name -> contracts.rest_contracts.GeneratorType
	9,  // 6: contracts.rest_contracts.BodyParam.config:type_name -> contracts.rest_contracts.GeneratorConfig
	5,  // 7: contracts.rest_contracts.BodyParam.simpleProperty:type_name -> contracts.rest_contracts.SimpleValue
	6,  // 8: contracts.rest_contracts.BodyParam.listProperty:type_name -> contracts.rest_contracts.ListProperty
	7,  // 9: contracts.rest_contracts.BodyParam.properties:type_name -> contracts.rest_contracts.ObjectProperty
	5,  // 10: contracts.rest_contracts.ListProperty.value:type_name -> contracts.rest_contracts.SimpleValue
	17, // 11: contracts.rest_contracts.ObjectProperty.properties:type_name -> contracts.rest_contracts.ObjectProperty.PropertiesEntry
	1,  // 12: contracts.rest_contracts.RequestParam.generator:type_name -> contracts.rest_contracts.GeneratorType
	9,  // 13: contracts.rest_contracts.RequestParam.generatorConfig:type_name -> contracts.rest_contracts.GeneratorConfig
	11, // 14: contracts.rest_contracts.GeneratorConfig.ipGeneratorConfig:type_name -> contracts.rest_contracts.IpGeneratorConfig
	12, // 15: contracts.rest_contracts.GeneratorConfig.wordGeneratorConfig:type_name -> contracts.rest_contracts.WordGeneratorConfig
	13, // 16: contracts.rest_contracts.GeneratorConfig.passwordGeneratorConfig:type_name -> contracts.rest_contracts.PasswordGeneratorConfig
	14, // 17: contracts.rest_contracts.GeneratorConfig.regexpConfig:type_name -> contracts.rest_contracts.RegexpConfig
	10, // 18: contracts.rest_contracts.IpGeneratorConfig.firstSection:type_name -> contracts.rest_contracts.Section
	10, // 19: contracts.rest_contracts.IpGeneratorConfig.secondSection:type_name -> contracts.rest_contracts.Section
	10, // 20: contracts.rest_contracts.IpGeneratorConfig.thirdSection:type_name -> contracts.rest_contracts.Section
	10, // 21: contracts.rest_contracts.IpGeneratorConfig.fourthSection:type_name -> contracts.rest_contracts.Section
	2,  // 22: contracts.rest_contracts.WordGeneratorConfig.language:type_name -> contracts.rest_contracts.Language
	4,  // 23: contracts.rest_contracts.ObjectProperty.PropertiesEntry.value:type_name -> contracts.rest_contracts.BodyParam
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_contracts_rest_contracts_scheme_proto_init() }
func file_contracts_rest_contracts_scheme_proto_init() {
	if File_contracts_rest_contracts_scheme_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contracts_rest_contracts_scheme_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_rest_contracts_scheme_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BodyParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_rest_contracts_scheme_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_rest_contracts_scheme_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_rest_contracts_scheme_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_rest_contracts_scheme_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_rest_contracts_scheme_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_rest_contracts_scheme_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_rest_contracts_scheme_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpGeneratorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_rest_contracts_scheme_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordGeneratorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_rest_contracts_scheme_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordGeneratorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_rest_contracts_scheme_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegexpConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_contracts_rest_contracts_scheme_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*BodyParam_SimpleProperty)(nil),
		(*BodyParam_ListProperty)(nil),
		(*BodyParam_Properties)(nil),
	}
	file_contracts_rest_contracts_scheme_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*SimpleValue_StringValue)(nil),
		(*SimpleValue_Int32Value)(nil),
		(*SimpleValue_Int64Value)(nil),
	}
	file_contracts_rest_contracts_scheme_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*GeneratorConfig_IpGeneratorConfig)(nil),
		(*GeneratorConfig_WordGeneratorConfig)(nil),
		(*GeneratorConfig_PasswordGeneratorConfig)(nil),
		(*GeneratorConfig_RegexpConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contracts_rest_contracts_scheme_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contracts_rest_contracts_scheme_proto_goTypes,
		DependencyIndexes: file_contracts_rest_contracts_scheme_proto_depIdxs,
		EnumInfos:         file_contracts_rest_contracts_scheme_proto_enumTypes,
		MessageInfos:      file_contracts_rest_contracts_scheme_proto_msgTypes,
	}.Build()
	File_contracts_rest_contracts_scheme_proto = out.File
	file_contracts_rest_contracts_scheme_proto_rawDesc = nil
	file_contracts_rest_contracts_scheme_proto_goTypes = nil
	file_contracts_rest_contracts_scheme_proto_depIdxs = nil
}
